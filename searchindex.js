Search.setIndex({"alltitles": {"API Reference: AlgoTree Package": [[12, "api-reference-algotree-package"]], "Adding a Child Node": [[8, "adding-a-child-node"]], "AlgoTree": [[0, "algotree"]], "AlgoTree.flattree module": [[0, "algotree-flattree-module"], [1, "module-AlgoTree.flattree"]], "AlgoTree.flattree_node module": [[0, "algotree-flattree-node-module"], [2, "module-AlgoTree.flattree_node"]], "AlgoTree.pretty_tree module": [[3, "algotree-pretty-tree-module"]], "AlgoTree.tree_converter module": [[0, "algotree-tree-converter-module"], [4, "module-AlgoTree.tree_converter"]], "AlgoTree.tree_viz module": [[0, "algotree-tree-viz-module"]], "AlgoTree.treenode module": [[0, "algotree-treenode-module"], [5, "module-AlgoTree.treenode"]], "AlgoTree.utils module": [[0, "algotree-utils-module"], [6, "module-AlgoTree.utils"]], "Attributes and Methods": [[13, "attributes-and-methods"]], "Conclusion": [[8, "conclusion"]], "Contents:": [[10, null]], "Converting to FlatTree": [[7, "converting-to-flattree"]], "Converting to TreeNode": [[8, "converting-to-treenode"]], "Cycle Detection": [[8, "cycle-detection"]], "Detaching and Pruning Nodes": [[8, "detaching-and-pruning-nodes"]], "Example Usage": [[13, "example-usage"]], "Expression Tree Evaluator": [[7, "expression-tree-evaluator"]], "Expression Trees Notebook": [[7, "expression-trees-notebook"]], "Features": [[11, "features"]], "FlatTree": [[8, "flattree"]], "FlatTree Class": [[8, "flattree-class"]], "FlatTree Notebook": [[9, "flattree-notebook"]], "FlatTreeNode Proxies": [[8, "flattreenode-proxies"]], "Getting Started": [[11, "getting-started"]], "Handling Errors": [[8, "handling-errors"]], "Handling Undefined Variables": [[7, "handling-undefined-variables"]], "Indices and tables": [[10, "indices-and-tables"]], "Initialization": [[13, "initialization"]], "Initializing a FlatTree": [[8, "initializing-a-flattree"]], "Introduction": [[11, "introduction"]], "Invalid Parent Reference": [[8, "invalid-parent-reference"]], "Manipulating the Tree": [[8, "manipulating-the-tree"]], "Methods": [[13, "methods"]], "Module Overview": [[12, "module-overview"]], "Node-Centric API": [[11, "node-centric-api"]], "Post-order Traversal": [[7, "post-order-traversal"]], "Post-order vs.\u00a0Pre-order Traversal": [[7, "post-order-vs-pre-order-traversal"]], "Properties": [[13, "properties"]], "Proxy Objects and Views": [[8, "proxy-objects-and-views"]], "Pruning Detached Nodes": [[8, "pruning-detached-nodes"]], "Root Node": [[8, "root-node"]], "Text Visualization": [[8, "text-visualization"]], "Theoretical Background": [[8, "theoretical-background"]], "Tree API": [[13, "tree-api"]], "Tree Conversions": [[8, "tree-conversions"]], "Tree Data Format": [[8, "tree-data-format"]], "TreeNode": [[13, "treenode"]], "TreeNode Structure": [[13, "treenode-structure"]], "Validating the Tree": [[8, "validating-the-tree"]], "Viewing Sub-Trees": [[8, "viewing-sub-trees"]], "Visualizing the Tree": [[8, "visualizing-the-tree"]], "Visualizing the Tree Structure": [[7, "visualizing-the-tree-structure"]], "Welcome to AlgoTree\u2019s documentation!": [[10, "welcome-to-algotree-s-documentation"]]}, "docnames": ["AlgoTree", "AlgoTree.flattree", "AlgoTree.flattree_node", "AlgoTree.pretty_tree", "AlgoTree.tree_converter", "AlgoTree.treenode", "AlgoTree.utils", "expression_tree_notebook", "flattree", "flattree_notebook", "index", "introduction", "modules", "treenode", "tutorial"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["AlgoTree.rst", "AlgoTree.flattree.rst", "AlgoTree.flattree_node.rst", "AlgoTree.pretty_tree.rst", "AlgoTree.tree_converter.rst", "AlgoTree.treenode.rst", "AlgoTree.utils.rst", "expression_tree_notebook.rst", "flattree.rst", "flattree_notebook.rst", "index.rst", "introduction.rst", "modules.rst", "treenode.rst", "tutorial.rst"], "indexentries": {"add_child() (algotree.flattree_node.flattreenode method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.add_child", false], [2, "AlgoTree.flattree_node.FlatTreeNode.add_child", false]], "add_child() (algotree.treenode.treenode method)": [[0, "AlgoTree.treenode.TreeNode.add_child", false], [5, "AlgoTree.treenode.TreeNode.add_child", false]], "algotree.flattree": [[0, "module-AlgoTree.flattree", false], [1, "module-AlgoTree.flattree", false]], "algotree.flattree_node": [[0, "module-AlgoTree.flattree_node", false], [2, "module-AlgoTree.flattree_node", false]], "algotree.pretty_tree": [[3, "module-AlgoTree.pretty_tree", false]], "algotree.tree_converter": [[0, "module-AlgoTree.tree_converter", false], [4, "module-AlgoTree.tree_converter", false]], "algotree.treenode": [[0, "module-AlgoTree.treenode", false], [5, "module-AlgoTree.treenode", false]], "algotree.utils": [[0, "module-AlgoTree.utils", false], [6, "module-AlgoTree.utils", false]], "ancestors() (in module algotree.utils)": [[0, "AlgoTree.utils.ancestors", false], [6, "AlgoTree.utils.ancestors", false]], "breadth_first() (in module algotree.utils)": [[0, "AlgoTree.utils.breadth_first", false], [6, "AlgoTree.utils.breadth_first", false]], "breadth_first_undirected() (in module algotree.utils)": [[0, "AlgoTree.utils.breadth_first_undirected", false], [6, "AlgoTree.utils.breadth_first_undirected", false]], "check_valid() (algotree.flattree.flattree static method)": [[0, "AlgoTree.flattree.FlatTree.check_valid", false], [1, "AlgoTree.flattree.FlatTree.check_valid", false]], "check_valid() (algotree.treenode.treenode class method)": [[0, "AlgoTree.treenode.TreeNode.check_valid", false], [5, "AlgoTree.treenode.TreeNode.check_valid", false]], "child_keys() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.child_keys", false], [1, "AlgoTree.flattree.FlatTree.child_keys", false]], "children (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.children", false], [1, "AlgoTree.flattree.FlatTree.children", false]], "children (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.children", false], [2, "AlgoTree.flattree_node.FlatTreeNode.children", false]], "children (algotree.treenode.treenode property)": [[0, "AlgoTree.treenode.TreeNode.children", false], [5, "AlgoTree.treenode.TreeNode.children", false]], "children_key (algotree.treenode.treenode attribute)": [[0, "AlgoTree.treenode.TreeNode.CHILDREN_KEY", false], [5, "AlgoTree.treenode.TreeNode.CHILDREN_KEY", false]], "clone() (algotree.flattree_node.flattreenode method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.clone", false], [2, "AlgoTree.flattree_node.FlatTreeNode.clone", false]], "clone() (algotree.treenode.treenode method)": [[0, "AlgoTree.treenode.TreeNode.clone", false], [5, "AlgoTree.treenode.TreeNode.clone", false]], "convert() (algotree.tree_converter.treeconverter static method)": [[0, "AlgoTree.tree_converter.TreeConverter.convert", false], [4, "AlgoTree.tree_converter.TreeConverter.convert", false]], "copy_under() (algotree.tree_converter.treeconverter static method)": [[0, "AlgoTree.tree_converter.TreeConverter.copy_under", false], [4, "AlgoTree.tree_converter.TreeConverter.copy_under", false]], "default_extract() (algotree.tree_converter.treeconverter static method)": [[0, "AlgoTree.tree_converter.TreeConverter.default_extract", false], [4, "AlgoTree.tree_converter.TreeConverter.default_extract", false]], "default_node_name() (algotree.tree_converter.treeconverter static method)": [[0, "AlgoTree.tree_converter.TreeConverter.default_node_name", false], [4, "AlgoTree.tree_converter.TreeConverter.default_node_name", false]], "depth() (in module algotree.utils)": [[0, "AlgoTree.utils.depth", false], [6, "AlgoTree.utils.depth", false]], "descendants() (in module algotree.utils)": [[0, "AlgoTree.utils.descendants", false], [6, "AlgoTree.utils.descendants", false]], "detach() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.detach", false], [1, "AlgoTree.flattree.FlatTree.detach", false]], "detach() (algotree.flattree_node.flattreenode method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.detach", false], [2, "AlgoTree.flattree_node.FlatTreeNode.detach", false]], "detached (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.detached", false], [1, "AlgoTree.flattree.FlatTree.detached", false]], "detached_key (algotree.flattree.flattree attribute)": [[0, "AlgoTree.flattree.FlatTree.DETACHED_KEY", false], [1, "AlgoTree.flattree.FlatTree.DETACHED_KEY", false]], "distance() (in module algotree.utils)": [[0, "AlgoTree.utils.distance", false], [6, "AlgoTree.utils.distance", false]], "find_node() (in module algotree.utils)": [[0, "AlgoTree.utils.find_node", false], [6, "AlgoTree.utils.find_node", false]], "find_nodes() (in module algotree.utils)": [[0, "AlgoTree.utils.find_nodes", false], [6, "AlgoTree.utils.find_nodes", false]], "find_path() (in module algotree.utils)": [[0, "AlgoTree.utils.find_path", false], [6, "AlgoTree.utils.find_path", false]], "flattree (class in algotree.flattree)": [[0, "AlgoTree.flattree.FlatTree", false], [1, "AlgoTree.flattree.FlatTree", false]], "flattreenode (class in algotree.flattree_node)": [[0, "AlgoTree.flattree_node.FlatTreeNode", false], [2, "AlgoTree.flattree_node.FlatTreeNode", false]], "height() (in module algotree.utils)": [[0, "AlgoTree.utils.height", false], [6, "AlgoTree.utils.height", false]], "is_ancestor() (in module algotree.utils)": [[0, "AlgoTree.utils.is_ancestor", false], [6, "AlgoTree.utils.is_ancestor", false]], "is_descendant() (in module algotree.utils)": [[0, "AlgoTree.utils.is_descendant", false], [6, "AlgoTree.utils.is_descendant", false]], "is_internal() (in module algotree.utils)": [[0, "AlgoTree.utils.is_internal", false], [6, "AlgoTree.utils.is_internal", false]], "is_leaf() (in module algotree.utils)": [[0, "AlgoTree.utils.is_leaf", false], [6, "AlgoTree.utils.is_leaf", false]], "is_root() (in module algotree.utils)": [[0, "AlgoTree.utils.is_root", false], [6, "AlgoTree.utils.is_root", false]], "is_sibling() (in module algotree.utils)": [[0, "AlgoTree.utils.is_sibling", false], [6, "AlgoTree.utils.is_sibling", false]], "lca() (in module algotree.utils)": [[0, "AlgoTree.utils.lca", false], [6, "AlgoTree.utils.lca", false]], "leaves() (in module algotree.utils)": [[0, "AlgoTree.utils.leaves", false], [6, "AlgoTree.utils.leaves", false]], "map() (in module algotree.utils)": [[0, "AlgoTree.utils.map", false], [6, "AlgoTree.utils.map", false]], "module": [[0, "module-AlgoTree.flattree", false], [0, "module-AlgoTree.flattree_node", false], [0, "module-AlgoTree.tree_converter", false], [0, "module-AlgoTree.treenode", false], [0, "module-AlgoTree.utils", false], [1, "module-AlgoTree.flattree", false], [2, "module-AlgoTree.flattree_node", false], [3, "module-AlgoTree.pretty_tree", false], [4, "module-AlgoTree.tree_converter", false], [5, "module-AlgoTree.treenode", false], [6, "module-AlgoTree.utils", false]], "name (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.name", false], [1, "AlgoTree.flattree.FlatTree.name", false]], "name (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.name", false], [2, "AlgoTree.flattree_node.FlatTreeNode.name", false]], "name (algotree.treenode.treenode property)": [[0, "AlgoTree.treenode.TreeNode.name", false], [5, "AlgoTree.treenode.TreeNode.name", false]], "name_key (algotree.treenode.treenode attribute)": [[0, "AlgoTree.treenode.TreeNode.NAME_KEY", false], [5, "AlgoTree.treenode.TreeNode.NAME_KEY", false]], "node() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.node", false], [1, "AlgoTree.flattree.FlatTree.node", false]], "node() (algotree.flattree_node.flattreenode method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.node", false], [2, "AlgoTree.flattree_node.FlatTreeNode.node", false]], "node() (algotree.treenode.treenode method)": [[0, "AlgoTree.treenode.TreeNode.node", false], [5, "AlgoTree.treenode.TreeNode.node", false]], "node_stats() (in module algotree.utils)": [[0, "AlgoTree.utils.node_stats", false], [6, "AlgoTree.utils.node_stats", false]], "node_to_leaf_paths() (in module algotree.utils)": [[0, "AlgoTree.utils.node_to_leaf_paths", false], [6, "AlgoTree.utils.node_to_leaf_paths", false]], "parent (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.parent", false], [1, "AlgoTree.flattree.FlatTree.parent", false]], "parent (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.parent", false], [2, "AlgoTree.flattree_node.FlatTreeNode.parent", false]], "parent (algotree.treenode.treenode property)": [[0, "AlgoTree.treenode.TreeNode.parent", false], [5, "AlgoTree.treenode.TreeNode.parent", false]], "parent_key (algotree.flattree.flattree attribute)": [[0, "AlgoTree.flattree.FlatTree.PARENT_KEY", false], [1, "AlgoTree.flattree.FlatTree.PARENT_KEY", false]], "path() (in module algotree.utils)": [[0, "AlgoTree.utils.path", false], [6, "AlgoTree.utils.path", false]], "paths_to_tree() (in module algotree.utils)": [[0, "AlgoTree.utils.paths_to_tree", false], [6, "AlgoTree.utils.paths_to_tree", false]], "payload (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.payload", false], [1, "AlgoTree.flattree.FlatTree.payload", false]], "payload (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.payload", false], [2, "AlgoTree.flattree_node.FlatTreeNode.payload", false]], "payload (algotree.treenode.treenode property)": [[0, "AlgoTree.treenode.TreeNode.payload", false], [5, "AlgoTree.treenode.TreeNode.payload", false]], "proxy() (algotree.flattree_node.flattreenode class method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.proxy", false], [2, "AlgoTree.flattree_node.FlatTreeNode.proxy", false]], "prune() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.prune", false], [1, "AlgoTree.flattree.FlatTree.prune", false]], "prune() (in module algotree.utils)": [[0, "AlgoTree.utils.prune", false], [6, "AlgoTree.utils.prune", false]], "root (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.root", false], [1, "AlgoTree.flattree.FlatTree.root", false]], "root (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.root", false], [2, "AlgoTree.flattree_node.FlatTreeNode.root", false]], "root (algotree.treenode.treenode property)": [[0, "AlgoTree.treenode.TreeNode.root", false], [5, "AlgoTree.treenode.TreeNode.root", false]], "root_key (algotree.flattree.flattree property)": [[0, "AlgoTree.flattree.FlatTree.root_key", false], [1, "AlgoTree.flattree.FlatTree.root_key", false]], "siblings() (in module algotree.utils)": [[0, "AlgoTree.utils.siblings", false], [6, "AlgoTree.utils.siblings", false]], "size() (in module algotree.utils)": [[0, "AlgoTree.utils.size", false], [6, "AlgoTree.utils.size", false]], "subtree() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.subtree", false], [1, "AlgoTree.flattree.FlatTree.subtree", false]], "subtree() (algotree.flattree_node.flattreenode method)": [[0, "AlgoTree.flattree_node.FlatTreeNode.subtree", false], [2, "AlgoTree.flattree_node.FlatTreeNode.subtree", false]], "subtree_centered_at() (in module algotree.utils)": [[0, "AlgoTree.utils.subtree_centered_at", false], [6, "AlgoTree.utils.subtree_centered_at", false]], "subtree_rooted_at() (in module algotree.utils)": [[0, "AlgoTree.utils.subtree_rooted_at", false], [6, "AlgoTree.utils.subtree_rooted_at", false]], "to_dict() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.to_dict", false], [1, "AlgoTree.flattree.FlatTree.to_dict", false]], "to_dict() (algotree.tree_converter.treeconverter static method)": [[0, "AlgoTree.tree_converter.TreeConverter.to_dict", false], [4, "AlgoTree.tree_converter.TreeConverter.to_dict", false]], "to_dict() (algotree.treenode.treenode method)": [[0, "AlgoTree.treenode.TreeNode.to_dict", false], [5, "AlgoTree.treenode.TreeNode.to_dict", false]], "tree (algotree.flattree_node.flattreenode property)": [[0, "AlgoTree.flattree_node.FlatTreeNode.tree", false], [2, "AlgoTree.flattree_node.FlatTreeNode.tree", false]], "treeconverter (class in algotree.tree_converter)": [[0, "AlgoTree.tree_converter.TreeConverter", false], [4, "AlgoTree.tree_converter.TreeConverter", false]], "treenode (class in algotree.treenode)": [[0, "AlgoTree.treenode.TreeNode", false], [5, "AlgoTree.treenode.TreeNode", false]], "unique_keys() (algotree.flattree.flattree method)": [[0, "AlgoTree.flattree.FlatTree.unique_keys", false], [1, "AlgoTree.flattree.FlatTree.unique_keys", false]], "visit() (in module algotree.utils)": [[0, "AlgoTree.utils.visit", false], [6, "AlgoTree.utils.visit", false]]}, "objects": {"AlgoTree": [[1, 0, 0, "-", "flattree"], [2, 0, 0, "-", "flattree_node"], [3, 0, 0, "-", "pretty_tree"], [4, 0, 0, "-", "tree_converter"], [5, 0, 0, "-", "treenode"], [6, 0, 0, "-", "utils"]], "AlgoTree.flattree": [[1, 1, 1, "", "FlatTree"]], "AlgoTree.flattree.FlatTree": [[1, 2, 1, "", "DETACHED_KEY"], [1, 2, 1, "", "PARENT_KEY"], [1, 3, 1, "", "check_valid"], [1, 3, 1, "", "child_keys"], [1, 4, 1, "", "children"], [1, 3, 1, "", "detach"], [1, 4, 1, "", "detached"], [1, 4, 1, "", "name"], [1, 3, 1, "", "node"], [1, 4, 1, "", "parent"], [1, 4, 1, "", "payload"], [1, 3, 1, "", "prune"], [1, 4, 1, "", "root"], [1, 4, 1, "", "root_key"], [1, 3, 1, "", "subtree"], [1, 3, 1, "", "to_dict"], [1, 3, 1, "", "unique_keys"]], "AlgoTree.flattree_node": [[2, 1, 1, "", "FlatTreeNode"]], "AlgoTree.flattree_node.FlatTreeNode": [[2, 3, 1, "", "add_child"], [2, 4, 1, "", "children"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "detach"], [2, 4, 1, "", "name"], [2, 3, 1, "", "node"], [2, 4, 1, "", "parent"], [2, 4, 1, "", "payload"], [2, 3, 1, "", "proxy"], [2, 4, 1, "", "root"], [2, 3, 1, "", "subtree"], [2, 4, 1, "", "tree"]], "AlgoTree.tree_converter": [[4, 1, 1, "", "TreeConverter"]], "AlgoTree.tree_converter.TreeConverter": [[4, 3, 1, "", "convert"], [4, 3, 1, "", "copy_under"], [4, 3, 1, "", "default_extract"], [4, 3, 1, "", "default_node_name"], [4, 3, 1, "", "to_dict"]], "AlgoTree.treenode": [[5, 1, 1, "", "TreeNode"]], "AlgoTree.treenode.TreeNode": [[5, 2, 1, "", "CHILDREN_KEY"], [5, 2, 1, "", "NAME_KEY"], [5, 3, 1, "", "add_child"], [5, 3, 1, "", "check_valid"], [5, 4, 1, "", "children"], [5, 3, 1, "", "clone"], [5, 4, 1, "", "name"], [5, 3, 1, "", "node"], [5, 4, 1, "", "parent"], [5, 4, 1, "", "payload"], [5, 4, 1, "", "root"], [5, 3, 1, "", "to_dict"]], "AlgoTree.utils": [[6, 5, 1, "", "ancestors"], [6, 5, 1, "", "breadth_first"], [6, 5, 1, "", "breadth_first_undirected"], [6, 5, 1, "", "depth"], [6, 5, 1, "", "descendants"], [6, 5, 1, "", "distance"], [6, 5, 1, "", "find_node"], [6, 5, 1, "", "find_nodes"], [6, 5, 1, "", "find_path"], [6, 5, 1, "", "height"], [6, 5, 1, "", "is_ancestor"], [6, 5, 1, "", "is_descendant"], [6, 5, 1, "", "is_internal"], [6, 5, 1, "", "is_leaf"], [6, 5, 1, "", "is_root"], [6, 5, 1, "", "is_sibling"], [6, 5, 1, "", "lca"], [6, 5, 1, "", "leaves"], [6, 5, 1, "", "map"], [6, 5, 1, "", "node_stats"], [6, 5, 1, "", "node_to_leaf_paths"], [6, 5, 1, "", "path"], [6, 5, 1, "", "paths_to_tree"], [6, 5, 1, "", "prune"], [6, 5, 1, "", "siblings"], [6, 5, 1, "", "size"], [6, 5, 1, "", "subtree_centered_at"], [6, 5, 1, "", "subtree_rooted_at"], [6, 5, 1, "", "visit"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "terms": {"": [0, 5, 6, 7, 9, 13], "0": [7, 9, 11], "0692": 7, "0be3": 7, "0f1cd53771af": 7, "0x7f7324d2c790": 9, "1": [7, 9, 11], "10": 9, "1000": 9, "10000": [0, 6], "100000": [0, 4], "11": 9, "12": 9, "13": 9, "13b5": 7, "14": 9, "15": 9, "1865c9b57902": 9, "1aac": 7, "1c3e10a": 7, "1fbb": 7, "2": [7, 8, 9, 11], "200": 9, "2000": 9, "2272134637651473476": 9, "290ec8b26651": 7, "29a49cbf": 9, "3": [7, 9, 11], "3000": 9, "31c0892fb385": 7, "350": 9, "36": 9, "365a": 9, "4": [7, 9, 11], "4000": 9, "408b": 7, "413e": 7, "431d": 7, "43a8": 7, "442a": 7, "4433": 7, "4644": 7, "47c3": 9, "47cd": 9, "485e": 9, "4900d062c394": 9, "4996": 7, "4c59": 7, "4c90": 7, "4d4c": 7, "4e16": 7, "4e1bcf7d0505": 9, "4e5e": 7, "4e81": 9, "4f0f": 7, "4f3d77eba747": 7, "5": 9, "5000": 9, "54fc091cf7f6": 7, "6": 9, "6548374021580866833": 9, "659a": 7, "677da881": 7, "6f3a61c7": 9, "7": [7, 9], "701c": 7, "71f23b14": 7, "73e998b5": 7, "8": 9, "827a": 7, "828b": 7, "82c9": 7, "87f4": 9, "88fcbeb5": 9, "8db774d0458a": 7, "8e47": 7, "9": [7, 9], "922c": 7, "9288": 7, "946dbd0a": 7, "949a": 7, "9658556c": 9, "9875": 7, "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "And": 9, "As": [0, 6, 7, 11], "At": 7, "By": 9, "For": [0, 2, 7, 8, 9], "If": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13], "In": [0, 1, 6, 7, 8, 9, 11], "It": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13], "No": [0, 1], "Of": 9, "Or": 7, "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13], "Then": 11, "To": [7, 11], "With": 8, "_": 7, "__call__": 7, "__detached__": [0, 1, 9], "__init__": [0, 2, 5, 7, 9, 13], "__name__": [0, 5, 9, 13], "__root__": 9, "_eval": 7, "_tree": 9, "a001": 7, "a0e": 7, "a17dd9d": 7, "a236": 9, "a4f2": 9, "a893": 7, "a8a8": 7, "aa4a": 9, "abcdefg": 9, "about": [0, 6, 9, 11], "abov": 9, "abstract": 8, "accept": [0, 6, 7, 9], "access": [8, 9, 11, 13], "achiev": [0, 6], "act": 8, "actual": [0, 1, 9], "ad": 7, "adapt": 8, "add": [0, 2, 5, 7, 9, 13], "add_child": [0, 2, 5, 8, 9, 12, 13], "addit": [0, 6, 8, 9, 13], "advanc": 8, "after": [0, 6, 7, 9], "again": [7, 9], "algebra": 7, "algorithm": [7, 11], "algotre": [7, 8, 9, 11], "all": [0, 1, 5, 6, 7, 8, 9, 11], "allow": [0, 2, 8, 9, 13], "along": 9, "alreadi": [0, 1, 5, 9], "also": [0, 1, 5, 6, 7, 8, 9, 11, 13], "altern": 0, "among": [0, 6], "an": [0, 1, 2, 5, 6, 7, 8, 9, 11, 13], "ancestor": [0, 2, 6, 9, 11, 12], "ani": [0, 1, 2, 4, 5, 6, 8, 9, 11], "anoth": [0, 5, 6, 8, 9, 11], "anytre": 9, "anytree2": 9, "api": [0, 8, 9, 10], "append": 7, "appli": 7, "approach": 11, "appropri": [0, 5, 9], "ar": [0, 1, 6, 7, 8, 9, 11, 12, 13], "arbitrari": [9, 13], "arg": [0, 1, 2, 5, 13], "argument": [0, 2, 3, 6, 7, 9], "around": [0, 1, 5], "aspect": 9, "assert": [7, 9], "assign": [0, 6], "associ": [0, 5, 11], "assum": [0, 1, 11], "attach": 9, "attempt": 8, "attribut": [0, 4, 5, 8, 10], "attributeerror": [0, 6], "augment": [0, 6], "avail": [0, 6, 11], "avoid": 9, "awar": 8, "b": [0, 6, 11], "b015": 7, "b499": 9, "b73d": 9, "b752": 7, "back": [0, 1], "background": 10, "base": [0, 1, 2, 4, 5, 13], "basic": 8, "bbaa0c291378": 7, "be7c": 7, "be971f83": 7, "becaus": 9, "been": [7, 9], "befor": 7, "behav": [0, 1, 2], "behavior": [9, 11], "being": [0, 6], "belong": 11, "below": 9, "between": [0, 4, 6, 8, 9, 11, 12], "bf40e61960e3": 9, "big_tre": 9, "bit": 9, "block": 9, "bookkeep": 9, "bool": [0, 6], "both": [0, 6, 11], "bottom": 7, "breadth": [0, 6], "breadth_first": [0, 6, 12], "breadth_first_undirect": [0, 6, 12], "break": 9, "c": [0, 6, 7, 11], "c379": 7, "c45d00867b9e": 7, "c6482f6a": 7, "c99fd52af980": 7, "cach": 8, "call": [0, 6, 7, 9], "callabl": [0, 4, 6], "can": [0, 1, 5, 6, 7, 8, 9, 11, 13], "cannot": [7, 9], "capabl": 8, "care": 9, "carri": 9, "case": [0, 1, 7, 9, 11], "caution": [0, 2], "cc3befd88d26": 7, "center": [0, 1, 6], "centric": [0, 8, 10], "certain": [0, 6, 11], "cf0681b3": 7, "chang": [0, 1, 5, 7, 8, 11], "check": [0, 1, 2, 5, 6, 8, 9], "check_valid": [0, 1, 5, 8, 9, 12], "child": [0, 2, 4, 5, 7, 9, 11, 13], "child1": [0, 6, 13], "child1_1": 13, "child1_1_valu": 13, "child1_valu": 13, "child2": [0, 6, 9, 13], "child2_1": 13, "child2_1_valu": 13, "child2_test": 9, "child2_valu": 13, "child3_test": 9, "child7": 9, "child_kei": [0, 1, 12], "children": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13], "children_kei": [0, 5, 12], "chose": 9, "class": [0, 1, 2, 4, 5, 7, 9, 10, 12, 13], "classmethod": [0, 2, 5], "clear": 9, "clone": [0, 2, 5, 12], "clone_children": [0, 2], "closest": [0, 6], "closur": 7, "code": [8, 11, 13], "collect": 8, "collis": 11, "com": 8, "common": [0, 6, 8, 11, 12], "compil": 7, "complet": [0, 9], "complex": [7, 8], "comput": [7, 8, 9], "concept": 11, "conceptu": 9, "conclus": 10, "condit": [0, 6, 11], "configur": 9, "connect": [0, 6], "consist": [8, 11], "const": 7, "constructor": [0, 1, 9], "contain": [0, 2, 4, 6, 7, 8, 11, 12], "context": [7, 8], "contigu": 9, "continu": [0, 6], "contrast": 7, "control": 8, "conveni": [7, 13], "convers": [7, 9, 10, 11], "convert": [0, 1, 3, 4, 9, 10, 11, 12], "copi": [0, 4, 7, 9], "copy_und": [0, 4, 9, 12], "copyundernod": 9, "correspond": [0, 1], "could": [0, 6, 7], "cours": 9, "cover": 8, "creat": [0, 1, 2, 8, 9, 11], "ctx": 7, "current": [0, 1, 2, 4, 5, 6, 11], "custom": 0, "cycl": [0, 1, 9], "cycle_tre": [8, 9], "cycle_tree_data": 8, "d": [0, 6, 11], "d13a": 7, "d5586d202bc6": 7, "data": [0, 1, 2, 4, 5, 7, 9, 10, 11, 13], "databas": 8, "de8fd66f": 7, "deal": 11, "debug": 7, "decid": 11, "decoupl": 11, "deep": 0, "deepcopi": [0, 2, 7, 9], "def": [7, 9, 13], "default": [0, 4, 6, 9, 13], "default_extract": [0, 4, 12], "default_node_nam": [0, 4, 12], "deffff04": 7, "defin": [0, 6, 7, 9, 11], "del": 9, "delet": 9, "demand": 9, "demonstr": [8, 9], "depend": 0, "depth": [0, 6, 7, 9, 12], "descend": [0, 1, 2, 6, 8, 9, 11, 12], "desend": [0, 6], "design": [7, 8, 11], "dest": [0, 6], "destin": [0, 6], "detach": [0, 1, 2, 9, 12], "detached_kei": [0, 1, 12], "detail": [0, 1, 2, 3, 5, 8, 12], "detailed_node_info": 9, "detect": 9, "df31efa0": 7, "dict": [0, 1, 2, 4, 5, 8, 9, 11, 13], "dictionari": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13], "differ": [0, 1, 7, 8, 9, 11, 12], "differenyli": [0, 1], "direct": 9, "directli": [8, 13], "disconnect": 9, "displai": 9, "distanc": [0, 6, 12], "do": [0, 2, 8, 9, 11], "document": [11, 12], "doe": [0, 5, 6, 9, 11], "doesn": [0, 1], "domain": 8, "don": 9, "down": [7, 11], "dump": [7, 8, 9], "dure": 7, "e": [0, 6, 7, 8, 9, 11], "each": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13], "earlier": 7, "easi": 9, "easili": 11, "ee209df4f77f": 7, "effect": [0, 6], "effici": [0, 6, 7, 8], "either": [0, 1, 9], "els": 9, "elsewher": 11, "encapsul": [0, 8], "end": 9, "ensur": [0, 1, 7, 8], "entir": [0, 1, 2], "enumer": [0, 6], "error": [7, 9], "error_tre": 9, "essenc": 7, "essenti": [0, 1, 7], "eval": 7, "evalu": 10, "even": [0, 1, 8, 11], "everi": [7, 9], "exampl": [0, 6, 7, 8, 10, 11], "except": [0, 5, 7, 8, 9, 11], "exclud": 13, "exist": [0, 1, 2, 5, 8, 9, 11], "expalanatori": 9, "expect": [0, 1, 2, 7, 8], "explicit": 9, "explor": [7, 9, 11], "expos": 8, "expr": 7, "expr_typ": 7, "express": 10, "extend": [0, 4], "extract": [0, 4, 7, 9], "extractor": [0, 4], "f": [0, 6, 7, 9, 11], "f4ba": 9, "facilit": [0, 2, 8], "fairli": 9, "fals": [0, 2, 6, 7], "fb2ef7550460": 7, "fd1c676e": 7, "featur": [8, 10], "file": [7, 8, 9], "filenam": 7, "find": [0, 6], "find_nod": [0, 6, 12], "find_path": [0, 6, 12], "fir": 9, "first": [0, 1, 6, 7, 8, 9], "fix": 9, "flat": [0, 1, 7, 8, 9, 11, 12], "flat_expr": 7, "flatten": 7, "flatter": 7, "flattre": [2, 10, 11, 12], "flattree_nod": [1, 7, 9, 11, 12], "flattreenod": [0, 1, 2, 7, 9, 11, 12], "flattreenode2": 9, "flexibl": [0, 2, 8, 11], "fn": 7, "focus": 9, "follow": [0, 1, 6, 11], "forest": [0, 1, 8], "form": [7, 13], "format": [7, 9, 10], "forrest": [0, 1], "found": [0, 1, 5, 8, 9], "free": 0, "from": [0, 1, 2, 4, 6, 7, 8, 9, 11], "full": 9, "func": [0, 6], "function": [0, 1, 4, 6, 7, 8, 9, 11, 12], "further": 7, "g": [0, 6, 11], "gather": [0, 6], "gener": [0, 4, 7, 9], "get": [0, 1, 2, 5, 6, 7, 9, 10], "github": 8, "given": [0, 1, 2, 5, 6, 11, 13], "go": [7, 9, 11], "gone": 9, "good": [7, 9], "graph": [0, 6], "graphviz": 12, "ha": [0, 1, 4, 6, 7, 8, 9, 11], "had": [7, 11], "handl": [10, 11], "happen": 7, "hash": [11, 13], "have": [0, 1, 6, 7, 9, 11, 13], "height": [0, 6, 12], "help": [9, 11], "here": [7, 9, 11, 13], "hide": 8, "hierarch": 8, "hop": [0, 6], "how": [7, 9, 11], "howev": [7, 9, 11], "http": 8, "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13], "idea": 7, "identifi": [0, 1, 8, 11], "ignor": [0, 1], "imag": [7, 9], "immedi": [0, 6], "immut": [9, 11], "implement": [0, 6, 7, 8, 9, 11], "import": [7, 8, 9, 11], "inaccess": 11, "includ": 11, "incomplet": 7, "incur": 9, "indent": [7, 8, 9], "index": 10, "indic": 8, "indirect": 8, "individu": 8, "inf": [0, 6], "inform": [0, 6, 7, 8, 9], "instal": 11, "instanc": [0, 2, 7, 9, 11], "instead": [0, 2, 7, 9], "int": [0, 4, 6], "integr": [0, 1, 9, 11], "interfac": [0, 1, 7, 8, 9], "intermediari": 8, "intern": [0, 6], "introduct": 10, "intuit": 8, "invalid": [0, 1, 5, 9, 11], "invalid_tre": 8, "invok": [0, 5, 6], "is_ancestor": [0, 6, 12], "is_descend": [0, 6, 12], "is_intern": [0, 6, 12], "is_leaf": [0, 6, 12], "is_root": [0, 6, 9, 12], "is_sibl": [0, 6, 12], "item": 9, "iter": [0, 6, 9], "its": [0, 1, 2, 5, 6, 7, 8, 9, 11], "itself": [0, 1, 6, 7, 9], "json": [7, 8, 9], "just": [0, 1, 5, 7, 9, 11], "k": 9, "keep": 9, "kei": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13], "keyerror": [0, 1, 5, 7, 8, 9, 11], "keyword": [0, 6, 9], "kind": [7, 9], "know": 7, "known": 7, "kwarg": [0, 1, 2, 3, 4, 5, 6, 13], "lambda": [0, 6, 7, 9], "larger": 11, "layer": 13, "layout": 9, "lazi": 8, "lazili": 9, "lca": [0, 6, 12], "leaf": [0, 6, 8], "learn": 11, "leav": [0, 6, 11, 12], "len": 9, "length": [0, 6], "let": [7, 9], "level": [0, 2, 6, 8], "librari": 9, "like": [0, 1, 7, 8, 9, 11], "list": [0, 1, 2, 5, 6, 8, 11, 13], "load": [8, 9], "local": 7, "log": [7, 9], "logic": [0, 1, 2, 7, 9], "logical_root": 9, "long": [8, 9, 11], "longer": 9, "look": [7, 9, 11], "low": [0, 2], "lowest": [0, 6], "mai": [0, 1, 6, 7, 8, 9, 11], "maintain": [0, 5, 8, 9, 13], "major": [0, 1], "make": 9, "mani": [0, 6, 7, 8], "manipul": [0, 1, 5, 9, 11, 12, 13], "map": [0, 1, 4, 6, 7, 9, 12, 13], "max": 7, "max_hop": [0, 6], "max_lvl": [0, 6], "max_rename_tri": [0, 6], "max_tri": [0, 4], "maximum": [0, 6], "md": 9, "mean": 11, "meaning": 11, "member": 9, "memori": 9, "merg": 8, "merge_und": 8, "met": 11, "method": [0, 1, 2, 5, 8, 9, 10, 11], "might": [0, 1, 7], "minu": [0, 5], "miss": [7, 9], "model": 11, "modifi": [0, 1, 6, 9, 11, 13], "modul": 10, "more": [0, 1, 3, 6, 7, 8, 9, 11], "most": [0, 6], "multipl": [0, 1, 7, 8], "must": 9, "mutablemap": [0, 2], "mutat": [0, 6], "n": [7, 9], "name": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13], "name_kei": [0, 5, 12], "natur": 8, "navig": [0, 1, 9, 11], "nchildren": 9, "necessarili": 11, "need": [0, 5, 7, 8, 13], "neglig": 11, "nest": [0, 5, 8], "network": 8, "new": [0, 2, 5, 6, 8, 9, 11], "new_data": 9, "new_nod": 9, "new_root": 9, "new_tre": [8, 9], "node": [0, 1, 2, 4, 5, 6, 7, 9, 10, 12, 13], "node0": [8, 9], "node1": [0, 6, 8, 9, 11], "node13": 9, "node14": 9, "node15": 9, "node17": 9, "node2": [0, 6, 8, 9, 11], "node200": 9, "node2000": 9, "node27": 9, "node3": [8, 9, 11], "node350": 9, "node36": [8, 9], "node37": 9, "node4": [8, 9, 11], "node4000": 9, "node4what": 9, "node5": [8, 9], "node5000": 9, "node6": 9, "node7": 9, "node8": 9, "node9": 9, "node_kei": [0, 2, 8], "node_nam": [0, 4, 6, 7, 9], "node_stat": [0, 6, 12], "node_to_leaf_path": [0, 6, 12], "nodetyp": [7, 11], "non": [7, 8, 9], "non_existent_par": [8, 9], "non_existent_parent_tre": 9, "non_serializable_tre": 9, "non_serializable_tree_data": 9, "none": [0, 1, 2, 5, 6, 7, 9, 11, 13], "nor": 11, "normal": [7, 9], "note": [0, 1, 6, 7], "notebook": 10, "notic": 9, "now": [7, 9, 11], "nowev": 9, "number": [0, 6, 7, 9, 13], "object": [0, 1, 2, 4, 5, 9, 11, 13], "offer": 8, "often": 9, "onc": 11, "one": [0, 6, 7, 11], "onli": [0, 1, 5, 7, 9, 11], "op": [0, 5, 7], "open_ctx": 7, "oper": [0, 6, 7, 8, 9, 11, 12], "optim": 7, "option": [0, 1, 2, 7, 8, 11, 13], "order": [0, 1, 6, 9, 10], "origin": [8, 9, 11], "orphan": 8, "other": [0, 1, 6, 7, 9, 11, 13], "other2": 13, "other2_valu": 13, "other_new_data": 9, "other_valu": 13, "otherwis": [0, 4, 6], "our": [0, 6, 7], "output": [8, 11, 13], "over": [0, 6, 7, 9, 11], "overhead": 9, "overview": 10, "own": 11, "packag": [10, 11], "page": 10, "pair": [0, 5, 7, 8, 9, 12, 13], "param": [3, 7], "paramet": [0, 1, 2, 4, 5, 6], "parent": [0, 1, 2, 5, 6, 7, 9, 11, 12, 13], "parent_kei": [0, 1, 12], "parent_node_kei": 8, "part": [0, 1, 8, 9], "partial": [0, 6, 11], "particular": [0, 1, 6, 8, 9], "particularli": 8, "pass": [0, 1, 6, 7, 9], "path": [0, 6, 9, 12], "paths_to_tre": [0, 6, 12], "pattern": 8, "payload": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13], "payload_func": [0, 6], "perform": [0, 1, 7, 9, 11], "permit": [7, 9], "perspect": [0, 2, 8, 11], "pip": 11, "place": [0, 6], "png": [7, 9], "point": 11, "pointer": [0, 1, 6, 11], "posit": [0, 5], "possibl": 11, "post": [0, 1, 6, 9, 10], "postord": 7, "potenti": [0, 6, 8], "power": [7, 8], "pre": [0, 6, 9, 10], "pred": [0, 6], "predic": [0, 6], "present": [0, 5, 8], "pretti": [3, 9, 11], "pretty_print": 9, "pretty_tre": 8, "prettytre": 3, "print": [0, 6, 7, 8, 9, 11, 13], "print_tre": 11, "prior": 9, "problem": 7, "proc": [0, 6], "procedur": [0, 6], "process": 7, "produc": 11, "program": 7, "properti": [0, 1, 2, 5, 6, 8, 9, 11], "provid": [0, 1, 5, 7, 8, 9, 11, 13], "proxi": [0, 1, 2, 9, 11, 12], "proxynod": 9, "prune": [0, 1, 6, 9, 12], "pruned_kei": 9, "purpos": 9, "py": [0, 1], "python": 11, "queeliu": 8, "quick": 11, "rais": [0, 1, 5, 6, 8, 9, 11], "random": [0, 4, 11], "rang": 11, "re": 9, "reach": 11, "real_root": 9, "recast": [0, 1, 5], "recurs": [0, 5, 7, 9, 11, 12, 13], "refer": [0, 1, 9, 10, 11], "reflect": 8, "regener": 9, "rel": [0, 7], "relat": [7, 8], "relationship": [0, 6, 8], "relev": [0, 4], "remain": [0, 5, 11], "remov": [0, 6, 8], "replac": [0, 6, 7], "reposit": [0, 1], "repositori": 8, "repres": [0, 1, 2, 7, 8, 9, 11, 12, 13], "represent": [0, 3, 4, 5, 7, 8, 9, 11, 12], "requir": [0, 6, 9], "reroot": 8, "respect": [0, 6, 7, 9], "result": [7, 9], "result2": 9, "retriev": [0, 1, 13], "retriv": [0, 1], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13], "revert": 9, "rewrit": [0, 6, 7], "rewritten": 7, "rid": 7, "root": [0, 1, 2, 4, 5, 6, 7, 9, 11, 12, 13], "root_kei": [0, 1, 2, 12], "root_nod": 9, "root_valu": 13, "rout": 8, "rule": 7, "run": 7, "sae": 9, "sai": 7, "same": [0, 5, 6, 7, 9, 11], "satisfi": [0, 6], "save": 7, "scienc": 8, "seamlessli": 8, "search": [0, 6, 10, 11, 12], "second": [0, 6], "section": 12, "see": [0, 1, 2, 3, 5, 6, 7, 9], "seek": 7, "seen": 7, "self": [7, 9, 13], "sens": [0, 5], "separ": [0, 1], "serial": 9, "serializ": 9, "serv": 13, "set": [0, 1, 2, 7, 8, 9, 11], "shape": 9, "shift": 7, "shold": 9, "should": [0, 2, 6, 7, 9, 11], "show": [0, 6, 9], "sibl": [0, 6, 9, 12], "side": [0, 6], "signatur": [0, 6], "similar": [7, 9], "simpl": [7, 11], "simpler": [0, 7], "simplic": 7, "simplif": 7, "simplifi": 7, "sinc": [0, 1, 5, 8, 9, 11], "sine": [0, 6], "singl": [0, 6, 7], "size": [0, 6, 12], "so": [0, 1, 5, 6, 7, 9, 11], "some": [0, 6, 8, 9, 11], "someth": 9, "soon": [0, 6], "sourc": [0, 1, 2, 4, 5, 6, 9], "source_nod": 7, "special": [0, 1, 8, 9], "specif": [0, 11], "specifi": [0, 6, 9, 11], "src_node": [0, 4], "stand": 0, "standard": [0, 1], "start": [0, 6, 10], "state": [7, 9], "static": [0, 1, 4], "staticmethod": [0, 4], "statist": [0, 6], "stiill": 9, "still": [7, 9, 11], "stop": [0, 6], "storag": 9, "store": [0, 1, 5, 9, 13], "str": [0, 1, 2, 5, 6, 7, 9, 11, 13], "strength": 11, "string": [3, 9], "structur": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12], "sub": [0, 1, 5, 6, 7, 9, 11], "subsequ": [0, 1], "subtre": [0, 1, 2, 4, 5, 6, 9, 11, 12], "subtree_centered_at": [0, 6, 12], "subtree_rooted_at": [0, 6, 12], "suit": 11, "suitabl": 0, "sum": 7, "support": [9, 11], "suppos": [0, 6, 7, 11], "system": [7, 8], "t": [0, 1, 9, 11], "take": [0, 4, 6, 7, 9], "target": [0, 4, 9], "target_typ": [0, 4, 7, 8, 9], "task": [7, 8], "tc": 8, "technic": [0, 1, 6], "term": 7, "terminologi": 8, "test": 9, "test_child": 9, "test_child2": 9, "test_child3": 9, "test_child_valu": 9, "test_child_value2": 9, "test_child_value3": 9, "text": [7, 9], "than": [0, 1], "thei": [0, 1, 7, 8, 9, 11], "them": [7, 8, 9, 11], "theoret": 10, "thi": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12], "thing": 7, "think": 7, "those": 9, "three": 7, "through": 9, "thu": 0, "to_dict": [0, 1, 4, 5, 12], "too": [0, 6, 9], "tool": 11, "top": [7, 8, 13], "total": 13, "tp": 9, "transform": 7, "translat": 7, "transmit": 9, "travers": [0, 6, 10, 11, 12], "treat": [0, 6, 8], "tree": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12], "tree1": 9, "tree2": 9, "tree3": 9, "tree4": 9, "tree_convert": [7, 8, 9, 12], "tree_data": [8, 9], "tree_viz": [7, 8, 9, 12], "treeconvert": [0, 4, 7, 8, 9, 12], "treenod": [7, 9, 10, 11, 12], "treeviz": [0, 7, 8, 9], "true": [0, 1, 2, 6, 7, 9, 11], "try": [7, 8, 9], "tutori": 8, "two": [0, 6, 7, 11], "type": [0, 4, 5, 6, 7, 8, 9], "typeerror": [0, 6, 9], "typic": 7, "u": 9, "undefin": [9, 10, 11], "under": [0, 1, 4, 6, 8, 9, 13], "underli": [0, 1, 2, 7, 8, 9, 11, 13], "undirect": [0, 6], "unifi": 9, "uniqu": [0, 1, 2, 4, 8, 9, 11], "unique_kei": [0, 1, 12], "until": [0, 6], "up": [0, 6, 7, 11], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13], "usag": [8, 10], "util": [4, 11, 12], "uuid": [0, 4, 7, 11], "v": [9, 10], "valid": [0, 1, 2, 5, 6, 9], "valu": [0, 1, 5, 7, 8, 9, 12, 13], "valueerror": [0, 1, 5, 6, 8, 9], "var": 7, "variabl": 10, "variou": [8, 9, 11], "veri": [0, 9], "versatil": 8, "view": [0, 1, 6, 9, 11], "visit": [0, 6, 12], "visual": [0, 9, 10, 11, 12], "wa": 9, "wai": [0, 5, 6, 8, 9, 11], "want": [0, 1, 2, 5, 6, 9, 11], "we": [0, 1, 2, 5, 6, 7, 8, 9, 11], "weak": 11, "welcom": 11, "well": [0, 5, 7, 11], "what": [7, 9], "whatev": 9, "when": [0, 1, 7, 9, 11], "where": [0, 1, 4, 5, 6, 7, 8, 11, 12, 13], "which": [0, 1, 2, 6, 7, 8, 9, 11, 13], "while": 8, "whole": 9, "whose": [0, 1], "wide": 11, "within": [0, 6, 11], "without": [0, 1, 6, 9], "word": 3, "work": [0, 7, 8, 9, 11, 12], "would": [0, 6, 7, 9, 11], "wrapper": [0, 5], "x": [7, 9, 11], "y": 7, "yeah": 9, "you": [0, 1, 2, 6, 7, 8, 9, 11], "your": [0, 6, 7], "z": 7, "zero": 7}, "titles": ["AlgoTree", "AlgoTree.flattree module", "AlgoTree.flattree_node module", "AlgoTree.pretty_tree module", "AlgoTree.tree_converter module", "AlgoTree.treenode module", "AlgoTree.utils module", "Expression Trees Notebook", "FlatTree", "<cite>FlatTree</cite> Notebook", "Welcome to AlgoTree\u2019s documentation!", "Introduction", "API Reference: <cite>AlgoTree</cite> Package", "TreeNode", "&lt;no title&gt;"], "titleterms": {"": 10, "ad": 8, "algotre": [0, 1, 2, 3, 4, 5, 6, 10, 12], "api": [11, 12, 13], "attribut": 13, "background": 8, "centric": 11, "child": 8, "class": 8, "conclus": 8, "content": 10, "convers": 8, "convert": [7, 8], "cycl": 8, "data": 8, "detach": 8, "detect": 8, "document": 10, "error": 8, "evalu": 7, "exampl": 13, "express": 7, "featur": 11, "flattre": [0, 1, 7, 8, 9], "flattree_nod": [0, 2], "flattreenod": 8, "format": 8, "get": 11, "handl": [7, 8], "indic": 10, "initi": [8, 13], "introduct": 11, "invalid": 8, "manipul": 8, "method": 13, "modul": [0, 1, 2, 3, 4, 5, 6, 12], "node": [8, 11], "notebook": [7, 9], "object": 8, "order": 7, "overview": 12, "packag": 12, "parent": 8, "post": 7, "pre": 7, "pretty_tre": 3, "properti": 13, "proxi": 8, "prune": 8, "refer": [8, 12], "root": 8, "start": 11, "structur": [7, 13], "sub": 8, "tabl": 10, "text": 8, "theoret": 8, "travers": 7, "tree": [7, 8, 13], "tree_convert": [0, 4], "tree_viz": 0, "treenod": [0, 5, 8, 13], "undefin": 7, "usag": 13, "util": [0, 6], "v": 7, "valid": 8, "variabl": 7, "view": 8, "visual": [7, 8], "welcom": 10}})